import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a as space, e as element, h as head_selector, b as detach_dev, c as claim_space, f as claim_element, g as children, k as attr_dev, p as set_style, l as add_location, m as insert_hydration_dev, o as noop, w as validate_each_argument, t as text, j as claim_text, n as append_hydration_dev, q as set_input_value, r as listen_dev, x as set_data_dev, y as destroy_each, u as run_all, z as is_function, A as stop_propagation } from './client.8b0ce1bb.js';

/* src\routes\home\[slug].svelte generated by Svelte v3.59.2 */

const file = "src\\routes\\home\\[slug].svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[26] = list[i].k;
	child_ctx[27] = list[i].v;
	child_ctx[28] = list[i]._id;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[31] = list[i].data;
	child_ctx[32] = list[i].t;
	child_ctx[33] = list[i].f;
	child_ctx[28] = list[i]._id;
	return child_ctx;
}

// (156:1) {:else}
function create_else_block(ctx) {
	let div0;
	let h3;
	let t0;
	let t1_value = /*post*/ ctx[0].name + "";
	let t1;
	let t2;
	let h5;
	let t3;
	let t4;
	let button0;
	let t5;
	let t6;
	let button1;
	let t7;
	let t8;
	let button2;
	let t9;
	let t10;
	let button3;
	let t11;
	let t12;
	let div3;
	let div1;
	let t13;
	let div2;
	let t14;
	let div11;
	let div4;
	let t15;
	let t16;
	let div6;
	let div5;
	let t17;
	let form;
	let div9;
	let div8;
	let div7;
	let t18;
	let t19;
	let input;
	let t20;
	let div10;
	let button4;
	let t21;
	let t22;
	let button5;
	let t23;
	let mounted;
	let dispose;
	let each_value_1 = /*post*/ ctx[0].oMsg;
	validate_each_argument(each_value_1);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	let each_value = /*post*/ ctx[0].myMemo;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div0 = element("div");
			h3 = element("h3");
			t0 = text("你好 ");
			t1 = text(t1_value);
			t2 = space();
			h5 = element("h5");
			t3 = text("Tip:用户设置请点击用户名,离开时点击睡眠按钮,没新消息时试试刷新");
			t4 = space();
			button0 = element("button");
			t5 = text("睡眠");
			t6 = space();
			button1 = element("button");
			t7 = text("刷新");
			t8 = space();
			button2 = element("button");
			t9 = text("删除按钮开关");
			t10 = space();
			button3 = element("button");
			t11 = text("注销");
			t12 = space();
			div3 = element("div");
			div1 = element("div");

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t13 = space();
			div2 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t14 = space();
			div11 = element("div");
			div4 = element("div");
			t15 = text("内容或备忘录具体值");
			t16 = space();
			div6 = element("div");
			div5 = element("div");
			t17 = space();
			form = element("form");
			div9 = element("div");
			div8 = element("div");
			div7 = element("div");
			t18 = text("发给谁(和)或键值");
			t19 = space();
			input = element("input");
			t20 = space();
			div10 = element("div");
			button4 = element("button");
			t21 = text("发送消息");
			t22 = space();
			button5 = element("button");
			t23 = text("添加备忘录");
			this.h();
		},
		l: function claim(nodes) {
			div0 = claim_element(nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h3 = claim_element(div0_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, "你好 ");
			t1 = claim_text(h3_nodes, t1_value);
			h3_nodes.forEach(detach_dev);
			t2 = claim_space(div0_nodes);
			h5 = claim_element(div0_nodes, "H5", { class: true, style: true });
			var h5_nodes = children(h5);
			t3 = claim_text(h5_nodes, "Tip:用户设置请点击用户名,离开时点击睡眠按钮,没新消息时试试刷新");
			h5_nodes.forEach(detach_dev);
			t4 = claim_space(div0_nodes);
			button0 = claim_element(div0_nodes, "BUTTON", { class: true, style: true });
			var button0_nodes = children(button0);
			t5 = claim_text(button0_nodes, "睡眠");
			button0_nodes.forEach(detach_dev);
			t6 = claim_space(div0_nodes);
			button1 = claim_element(div0_nodes, "BUTTON", { class: true, style: true });
			var button1_nodes = children(button1);
			t7 = claim_text(button1_nodes, "刷新");
			button1_nodes.forEach(detach_dev);
			t8 = claim_space(div0_nodes);
			button2 = claim_element(div0_nodes, "BUTTON", { class: true, style: true });
			var button2_nodes = children(button2);
			t9 = claim_text(button2_nodes, "删除按钮开关");
			button2_nodes.forEach(detach_dev);
			t10 = claim_space(div0_nodes);
			button3 = claim_element(div0_nodes, "BUTTON", { class: true, style: true });
			var button3_nodes = children(button3);
			t11 = claim_text(button3_nodes, "注销");
			button3_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t12 = claim_space(nodes);
			div3 = claim_element(nodes, "DIV", { class: true, style: true });
			var div3_nodes = children(div3);
			div1 = claim_element(div3_nodes, "DIV", { class: true, style: true });
			var div1_nodes = children(div1);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(div1_nodes);
			}

			div1_nodes.forEach(detach_dev);
			t13 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true, style: true });
			var div2_nodes = children(div2);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div2_nodes);
			}

			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t14 = claim_space(nodes);
			div11 = claim_element(nodes, "DIV", { style: true, id: true, class: true });
			var div11_nodes = children(div11);
			div4 = claim_element(div11_nodes, "DIV", { class: true, style: true });
			var div4_nodes = children(div4);
			t15 = claim_text(div4_nodes, "内容或备忘录具体值");
			div4_nodes.forEach(detach_dev);
			t16 = claim_space(div11_nodes);
			div6 = claim_element(div11_nodes, "DIV", { class: true, style: true });
			var div6_nodes = children(div6);

			div5 = claim_element(div6_nodes, "DIV", {
				class: true,
				style: true,
				contenteditable: true,
				id: true
			});

			children(div5).forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t17 = claim_space(div11_nodes);
			form = claim_element(div11_nodes, "FORM", { id: true, style: true });
			var form_nodes = children(form);
			div9 = claim_element(form_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			t18 = claim_text(div7_nodes, "发给谁(和)或键值");
			div7_nodes.forEach(detach_dev);
			t19 = claim_space(div8_nodes);
			input = claim_element(div8_nodes, "INPUT", { class: true, type: true });
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			t20 = claim_space(form_nodes);
			div10 = claim_element(form_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			button4 = claim_element(div10_nodes, "BUTTON", { class: true, type: true, style: true });
			var button4_nodes = children(button4);
			t21 = claim_text(button4_nodes, "发送消息");
			button4_nodes.forEach(detach_dev);
			t22 = claim_space(div10_nodes);
			button5 = claim_element(div10_nodes, "BUTTON", { class: true, type: true, style: true });
			var button5_nodes = children(button5);
			t23 = claim_text(button5_nodes, "添加备忘录");
			button5_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h3, "class", "col-sm-2 text-primary");
			add_location(h3, file, 157, 2, 4622);
			attr_dev(h5, "class", "col-sm-2 text-danger");
			set_style(h5, "line-height", "1.3em");
			add_location(h5, file, 158, 2, 4712);
			attr_dev(button0, "class", "btn col-sm-1 btn-primary");
			set_style(button0, "outline", "none");
			add_location(button0, file, 159, 2, 4815);
			attr_dev(button1, "class", "btn col-sm-1 col-sm-offset-1");
			set_style(button1, "outline", "none");
			add_location(button1, file, 160, 2, 4919);
			attr_dev(button2, "class", "btn col-sm-2 col-sm-offset-1 btn-danger");
			set_style(button2, "outline", "none");
			add_location(button2, file, 161, 2, 5030);
			attr_dev(button3, "class", "col-sm-1 btn btn-info col-sm-offset-1");
			set_style(button3, "outline", "none");
			add_location(button3, file, 162, 2, 5157);
			attr_dev(div0, "class", "row");
			add_location(div0, file, 156, 1, 4602);
			attr_dev(div1, "class", "col-sm-9 btn-success");
			set_style(div1, "overflow", "auto");
			set_style(div1, "height", "100%");
			set_style(div1, "border-radius", "0.3em");
			add_location(div1, file, 165, 2, 5315);
			attr_dev(div2, "class", "col-sm-3 btn-warning");
			set_style(div2, "overflow", "auto");
			set_style(div2, "height", "100%");
			set_style(div2, "border-radius", "0.3em");
			add_location(div2, file, 177, 2, 5946);
			attr_dev(div3, "class", "row");
			set_style(div3, "height", "58%");
			add_location(div3, file, 164, 1, 5274);
			attr_dev(div4, "class", "text-info text-center");
			set_style(div4, "width", "100%");
			set_style(div4, "height", "9%");
			set_style(div4, "line-height", "1.3em");
			set_style(div4, "font-size", "1.5em");
			add_location(div4, file, 190, 2, 6602);
			attr_dev(div5, "class", "col-sm-12 bg-info");
			set_style(div5, "overflow", "auto");
			set_style(div5, "height", "100%");
			set_style(div5, "border-radius", "0.3em");
			set_style(div5, "outline", "none");
			set_style(div5, "font-size", "1.7em");
			set_style(div5, "line-height", "1em");
			attr_dev(div5, "contenteditable", "");
			attr_dev(div5, "id", "vInput");
			add_location(div5, file, 192, 3, 6764);
			attr_dev(div6, "class", "row");
			set_style(div6, "height", "60%");
			add_location(div6, file, 191, 2, 6722);
			attr_dev(div7, "class", "input-group-addon");
			add_location(div7, file, 197, 13, 7087);
			attr_dev(input, "class", "form-control");
			attr_dev(input, "type", "input");
			add_location(input, file, 198, 13, 7147);
			attr_dev(div8, "class", "input-group col-xs-12");
			add_location(div8, file, 196, 11, 7038);
			attr_dev(div9, "class", "form-group row");
			add_location(div9, file, 195, 9, 6998);
			attr_dev(button4, "class", "btn btn-success col-xs-7");
			attr_dev(button4, "type", "button");
			set_style(button4, "outline", "none");
			add_location(button4, file, 202, 11, 7292);
			attr_dev(button5, "class", "btn btn-warning col-xs-5");
			attr_dev(button5, "type", "button");
			set_style(button5, "outline", "none");
			add_location(button5, file, 203, 11, 7414);
			attr_dev(div10, "class", "form-group row");
			add_location(div10, file, 201, 9, 7252);
			attr_dev(form, "id", "form");
			set_style(form, "margin-top", "1em");
			add_location(form, file, 194, 2, 6947);
			set_style(div11, "height", "35%");
			set_style(div11, "position", "relative");
			attr_dev(div11, "id", "oUse");
			attr_dev(div11, "class", "svelte-1sv4t20");
			add_location(div11, file, 189, 1, 6544);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div0, anchor);
			append_hydration_dev(div0, h3);
			append_hydration_dev(h3, t0);
			append_hydration_dev(h3, t1);
			append_hydration_dev(div0, t2);
			append_hydration_dev(div0, h5);
			append_hydration_dev(h5, t3);
			append_hydration_dev(div0, t4);
			append_hydration_dev(div0, button0);
			append_hydration_dev(button0, t5);
			append_hydration_dev(div0, t6);
			append_hydration_dev(div0, button1);
			append_hydration_dev(button1, t7);
			append_hydration_dev(div0, t8);
			append_hydration_dev(div0, button2);
			append_hydration_dev(button2, t9);
			append_hydration_dev(div0, t10);
			append_hydration_dev(div0, button3);
			append_hydration_dev(button3, t11);
			insert_hydration_dev(target, t12, anchor);
			insert_hydration_dev(target, div3, anchor);
			append_hydration_dev(div3, div1);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				if (each_blocks_1[i]) {
					each_blocks_1[i].m(div1, null);
				}
			}

			append_hydration_dev(div3, t13);
			append_hydration_dev(div3, div2);

			for (let i = 0; i < each_blocks.length; i += 1) {
				if (each_blocks[i]) {
					each_blocks[i].m(div2, null);
				}
			}

			insert_hydration_dev(target, t14, anchor);
			insert_hydration_dev(target, div11, anchor);
			append_hydration_dev(div11, div4);
			append_hydration_dev(div4, t15);
			append_hydration_dev(div11, t16);
			append_hydration_dev(div11, div6);
			append_hydration_dev(div6, div5);
			append_hydration_dev(div11, t17);
			append_hydration_dev(div11, form);
			append_hydration_dev(form, div9);
			append_hydration_dev(div9, div8);
			append_hydration_dev(div8, div7);
			append_hydration_dev(div7, t18);
			append_hydration_dev(div8, t19);
			append_hydration_dev(div8, input);
			set_input_value(input, /*kValue*/ ctx[1]);
			append_hydration_dev(form, t20);
			append_hydration_dev(form, div10);
			append_hydration_dev(div10, button4);
			append_hydration_dev(button4, t21);
			append_hydration_dev(div10, t22);
			append_hydration_dev(div10, button5);
			append_hydration_dev(button5, t23);

			if (!mounted) {
				dispose = [
					listen_dev(h3, "click", /*click_handler_2*/ ctx[21], false, false, false, false),
					listen_dev(button0, "click", /*click_handler_3*/ ctx[22], false, false, false, false),
					listen_dev(button1, "click", /*click_handler_4*/ ctx[23], false, false, false, false),
					listen_dev(button2, "click", /*click_handler_5*/ ctx[24], false, false, false, false),
					listen_dev(button3, "click", /*quitLog*/ ctx[7], false, false, false, false),
					listen_dev(input, "input", /*input_input_handler*/ ctx[25]),
					listen_dev(button4, "click", /*sendMsg*/ ctx[8], false, false, false, false),
					listen_dev(button5, "click", /*addMemo*/ ctx[9], false, false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*post*/ 1 && t1_value !== (t1_value = /*post*/ ctx[0].name + "")) set_data_dev(t1, t1_value);

			if (dirty[0] & /*turnMsg, post, delMsg, delBtn*/ 98369) {
				each_value_1 = /*post*/ ctx[0].oMsg;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(div1, null);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_1.length;
			}

			if (dirty[0] & /*delMemo1, post, delBtn, clickMemo2, clickMemo1*/ 19521) {
				each_value = /*post*/ ctx[0].myMemo;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div2, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (dirty[0] & /*kValue*/ 2) {
				set_input_value(input, /*kValue*/ ctx[1]);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div0);
			if (detaching) detach_dev(t12);
			if (detaching) detach_dev(div3);
			destroy_each(each_blocks_1, detaching);
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(t14);
			if (detaching) detach_dev(div11);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(156:1) {:else}",
		ctx
	});

	return block;
}

// (151:17) 
function create_if_block_1(ctx) {
	let div;
	let h1;
	let t0;
	let t1;
	let button;
	let t2;
	let t3_value = /*post*/ ctx[0].name + "";
	let t3;
	let t4;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div = element("div");
			h1 = element("h1");
			t0 = text("正在睡眠状态...");
			t1 = space();
			button = element("button");
			t2 = text("进入");
			t3 = text(t3_value);
			t4 = text("的首页");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true, style: true });
			var div_nodes = children(div);
			h1 = claim_element(div_nodes, "H1", { class: true, style: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "正在睡眠状态...");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			button = claim_element(div_nodes, "BUTTON", { class: true, style: true });
			var button_nodes = children(button);
			t2 = claim_text(button_nodes, "进入");
			t3 = claim_text(button_nodes, t3_value);
			t4 = claim_text(button_nodes, "的首页");
			button_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "text-primary lead text-center");
			set_style(h1, "line-height", "5em");
			set_style(h1, "font-size", "3.7em");
			add_location(h1, file, 152, 2, 4333);
			attr_dev(button, "class", "btn btn-success btn-block text-center");
			set_style(button, "outline", "none");
			set_style(button, "margin-top", "23%");
			add_location(button, file, 153, 2, 4436);
			attr_dev(div, "class", "bg-info");
			set_style(div, "height", "97%");
			set_style(div, "border-radius", "1em");
			add_location(div, file, 151, 1, 4268);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div, anchor);
			append_hydration_dev(div, h1);
			append_hydration_dev(h1, t0);
			append_hydration_dev(div, t1);
			append_hydration_dev(div, button);
			append_hydration_dev(button, t2);
			append_hydration_dev(button, t3);
			append_hydration_dev(button, t4);

			if (!mounted) {
				dispose = listen_dev(button, "click", /*click_handler_1*/ ctx[20], false, false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*post*/ 1 && t3_value !== (t3_value = /*post*/ ctx[0].name + "")) set_data_dev(t3, t3_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(151:17) ",
		ctx
	});

	return block;
}

// (131:1) {#if setUser}
function create_if_block(ctx) {
	let form;
	let div2;
	let div1;
	let div0;
	let t0;
	let t1;
	let input0;
	let t2;
	let div5;
	let div4;
	let div3;
	let t3;
	let t4;
	let input1;
	let t5;
	let div6;
	let button0;
	let t6;
	let t7;
	let button1;
	let t8;
	let t9;
	let button2;
	let t10;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			form = element("form");
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			t0 = text("旧密码");
			t1 = space();
			input0 = element("input");
			t2 = space();
			div5 = element("div");
			div4 = element("div");
			div3 = element("div");
			t3 = text("新密码");
			t4 = space();
			input1 = element("input");
			t5 = space();
			div6 = element("div");
			button0 = element("button");
			t6 = text("修改密码");
			t7 = space();
			button1 = element("button");
			t8 = text("删除账户");
			t9 = space();
			button2 = element("button");
			t10 = text("退出设置");
			this.h();
		},
		l: function claim(nodes) {
			form = claim_element(nodes, "FORM", { id: true, style: true });
			var form_nodes = children(form);
			div2 = claim_element(form_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "旧密码");
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div1_nodes);

			input0 = claim_element(div1_nodes, "INPUT", {
				class: true,
				autocomplete: true,
				type: true
			});

			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t2 = claim_space(form_nodes);
			div5 = claim_element(form_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			t3 = claim_text(div3_nodes, "新密码");
			div3_nodes.forEach(detach_dev);
			t4 = claim_space(div4_nodes);
			input1 = claim_element(div4_nodes, "INPUT", { class: true, type: true });
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t5 = claim_space(form_nodes);
			div6 = claim_element(form_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			button0 = claim_element(div6_nodes, "BUTTON", { class: true, type: true, style: true });
			var button0_nodes = children(button0);
			t6 = claim_text(button0_nodes, "修改密码");
			button0_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			t7 = claim_space(nodes);
			button1 = claim_element(nodes, "BUTTON", { class: true, style: true });
			var button1_nodes = children(button1);
			t8 = claim_text(button1_nodes, "删除账户");
			button1_nodes.forEach(detach_dev);
			t9 = claim_space(nodes);
			button2 = claim_element(nodes, "BUTTON", { class: true, style: true });
			var button2_nodes = children(button2);
			t10 = claim_text(button2_nodes, "退出设置");
			button2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "input-group-addon");
			add_location(div0, file, 134, 12, 3433);
			attr_dev(input0, "class", "form-control");
			attr_dev(input0, "autocomplete", "off");
			attr_dev(input0, "type", "password");
			add_location(input0, file, 135, 12, 3486);
			attr_dev(div1, "class", "input-group");
			add_location(div1, file, 133, 10, 3395);
			attr_dev(div2, "class", "form-group");
			add_location(div2, file, 132, 8, 3360);
			attr_dev(div3, "class", "input-group-addon");
			add_location(div3, file, 140, 12, 3688);
			attr_dev(input1, "class", "form-control");
			attr_dev(input1, "type", "password");
			add_location(input1, file, 141, 12, 3741);
			attr_dev(div4, "class", "input-group");
			add_location(div4, file, 139, 10, 3650);
			attr_dev(div5, "class", "form-group top svelte-1sv4t20");
			add_location(div5, file, 138, 8, 3611);
			attr_dev(button0, "class", "btn btn-warning btn-block");
			attr_dev(button0, "type", "button");
			set_style(button0, "outline", "none");
			add_location(button0, file, 145, 10, 3886);
			attr_dev(div6, "class", "form-group top svelte-1sv4t20");
			add_location(div6, file, 144, 8, 3847);
			attr_dev(form, "id", "form");
			set_style(form, "margin-top", "15em");
			add_location(form, file, 131, 1, 3309);
			attr_dev(button1, "class", "btn btn-danger btn-block top svelte-1sv4t20");
			set_style(button1, "outline", "none");
			add_location(button1, file, 148, 6, 4032);
			attr_dev(button2, "class", "btn btn-success btn-block top svelte-1sv4t20");
			set_style(button2, "outline", "none");
			add_location(button2, file, 149, 1, 4134);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, form, anchor);
			append_hydration_dev(form, div2);
			append_hydration_dev(div2, div1);
			append_hydration_dev(div1, div0);
			append_hydration_dev(div0, t0);
			append_hydration_dev(div1, t1);
			append_hydration_dev(div1, input0);
			set_input_value(input0, /*oldPass*/ ctx[3]);
			append_hydration_dev(form, t2);
			append_hydration_dev(form, div5);
			append_hydration_dev(div5, div4);
			append_hydration_dev(div4, div3);
			append_hydration_dev(div3, t3);
			append_hydration_dev(div4, t4);
			append_hydration_dev(div4, input1);
			set_input_value(input1, /*newPass*/ ctx[4]);
			append_hydration_dev(form, t5);
			append_hydration_dev(form, div6);
			append_hydration_dev(div6, button0);
			append_hydration_dev(button0, t6);
			insert_hydration_dev(target, t7, anchor);
			insert_hydration_dev(target, button1, anchor);
			append_hydration_dev(button1, t8);
			insert_hydration_dev(target, t9, anchor);
			insert_hydration_dev(target, button2, anchor);
			append_hydration_dev(button2, t10);

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[17]),
					listen_dev(input1, "input", /*input1_input_handler*/ ctx[18]),
					listen_dev(button0, "click", /*setPass*/ ctx[13], false, false, false, false),
					listen_dev(button1, "click", /*delUser*/ ctx[12], false, false, false, false),
					listen_dev(button2, "click", /*click_handler*/ ctx[19], false, false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*oldPass*/ 8 && input0.value !== /*oldPass*/ ctx[3]) {
				set_input_value(input0, /*oldPass*/ ctx[3]);
			}

			if (dirty[0] & /*newPass*/ 16 && input1.value !== /*newPass*/ ctx[4]) {
				set_input_value(input1, /*newPass*/ ctx[4]);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(form);
			if (detaching) detach_dev(t7);
			if (detaching) detach_dev(button1);
			if (detaching) detach_dev(t9);
			if (detaching) detach_dev(button2);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(131:1) {#if setUser}",
		ctx
	});

	return block;
}

// (171:5) {#if delBtn}
function create_if_block_3(ctx) {
	let button0;
	let t0;
	let t1;
	let button1;
	let t2;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			button0 = element("button");
			t0 = text("删除");
			t1 = space();
			button1 = element("button");
			t2 = text("撤回");
			this.h();
		},
		l: function claim(nodes) {
			button0 = claim_element(nodes, "BUTTON", { class: true, style: true });
			var button0_nodes = children(button0);
			t0 = claim_text(button0_nodes, "删除");
			button0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			button1 = claim_element(nodes, "BUTTON", { class: true, style: true });
			var button1_nodes = children(button1);
			t2 = claim_text(button1_nodes, "撤回");
			button1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button0, "class", "col-sm-offset-1 col-sm-1 btn btn-danger");
			set_style(button0, "outline", "none");
			add_location(button0, file, 171, 5, 5684);
			attr_dev(button1, "class", "col-sm-1 btn btn-danger");
			set_style(button1, "outline", "none");
			add_location(button1, file, 172, 5, 5803);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, button0, anchor);
			append_hydration_dev(button0, t0);
			insert_hydration_dev(target, t1, anchor);
			insert_hydration_dev(target, button1, anchor);
			append_hydration_dev(button1, t2);

			if (!mounted) {
				dispose = [
					listen_dev(
						button0,
						"click",
						function () {
							if (is_function(/*delMsg*/ ctx[15](/*_id*/ ctx[28]))) /*delMsg*/ ctx[15](/*_id*/ ctx[28]).apply(this, arguments);
						},
						false,
						false,
						false,
						false
					),
					listen_dev(
						button1,
						"click",
						function () {
							if (is_function(/*turnMsg*/ ctx[16](/*_id*/ ctx[28]))) /*turnMsg*/ ctx[16](/*_id*/ ctx[28]).apply(this, arguments);
						},
						false,
						false,
						false,
						false
					)
				];

				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(button0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(button1);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(171:5) {#if delBtn}",
		ctx
	});

	return block;
}

// (167:3) {#each post.oMsg as {data, t, f, _id}}
function create_each_block_1(ctx) {
	let div2;
	let div0;
	let t0_value = /*f*/ ctx[33] + "";
	let t0;
	let t1;
	let t2_value = /*t*/ ctx[32] + "";
	let t2;
	let t3;
	let div1;
	let t4_value = /*data*/ ctx[31] + "";
	let t4;
	let t5;
	let t6;
	let if_block = /*delBtn*/ ctx[6] && create_if_block_3(ctx);

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			t0 = text(t0_value);
			t1 = text(" 发送给 ");
			t2 = text(t2_value);
			t3 = space();
			div1 = element("div");
			t4 = text(t4_value);
			t5 = space();
			if (if_block) if_block.c();
			t6 = space();
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true, style: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, t0_value);
			t1 = claim_text(div0_nodes, " 发送给 ");
			t2 = claim_text(div0_nodes, t2_value);
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t4 = claim_text(div1_nodes, t4_value);
			div1_nodes.forEach(detach_dev);
			t5 = claim_space(div2_nodes);
			if (if_block) if_block.l(div2_nodes);
			t6 = claim_space(div2_nodes);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "col-sm-3 test-center");
			add_location(div0, file, 168, 5, 5553);
			attr_dev(div1, "class", "col-sm-offset-1 col-sm-5");
			add_location(div1, file, 169, 5, 5610);
			attr_dev(div2, "class", "row");
			set_style(div2, "line-height", "1.3em");
			set_style(div2, "font-size", "1.1em");
			set_style(div2, "border-bottom", "3px solid pink");
			add_location(div2, file, 167, 4, 5455);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div2, anchor);
			append_hydration_dev(div2, div0);
			append_hydration_dev(div0, t0);
			append_hydration_dev(div0, t1);
			append_hydration_dev(div0, t2);
			append_hydration_dev(div2, t3);
			append_hydration_dev(div2, div1);
			append_hydration_dev(div1, t4);
			append_hydration_dev(div2, t5);
			if (if_block) if_block.m(div2, null);
			append_hydration_dev(div2, t6);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*post*/ 1 && t0_value !== (t0_value = /*f*/ ctx[33] + "")) set_data_dev(t0, t0_value);
			if (dirty[0] & /*post*/ 1 && t2_value !== (t2_value = /*t*/ ctx[32] + "")) set_data_dev(t2, t2_value);
			if (dirty[0] & /*post*/ 1 && t4_value !== (t4_value = /*data*/ ctx[31] + "")) set_data_dev(t4, t4_value);

			if (/*delBtn*/ ctx[6]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_3(ctx);
					if_block.c();
					if_block.m(div2, t6);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			if (if_block) if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(167:3) {#each post.oMsg as {data, t, f, _id}}",
		ctx
	});

	return block;
}

// (183:5) {#if delBtn}
function create_if_block_2(ctx) {
	let button;
	let t;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			button = element("button");
			t = text("删除");
			this.h();
		},
		l: function claim(nodes) {
			button = claim_element(nodes, "BUTTON", { class: true, style: true });
			var button_nodes = children(button);
			t = claim_text(button_nodes, "删除");
			button_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button, "class", "btn btn-danger col-sm-offset-1 col-sm-2");
			set_style(button, "outline", "none");
			add_location(button, file, 183, 5, 6360);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, button, anchor);
			append_hydration_dev(button, t);

			if (!mounted) {
				dispose = listen_dev(
					button,
					"click",
					stop_propagation(function () {
						if (is_function(/*delMemo1*/ ctx[14](/*_id*/ ctx[28]))) /*delMemo1*/ ctx[14](/*_id*/ ctx[28]).apply(this, arguments);
					}),
					false,
					false,
					true,
					false
				);

				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(183:5) {#if delBtn}",
		ctx
	});

	return block;
}

// (179:3) {#each post.myMemo as {k, v, _id}}
function create_each_block(ctx) {
	let div2;
	let div0;
	let t0_value = /*k*/ ctx[26] + "";
	let t0;
	let t1;
	let div1;
	let t2_value = /*v*/ ctx[27] + "";
	let t2;
	let t3;
	let t4;
	let mounted;
	let dispose;
	let if_block = /*delBtn*/ ctx[6] && create_if_block_2(ctx);

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			t0 = text(t0_value);
			t1 = space();
			div1 = element("div");
			t2 = text(t2_value);
			t3 = space();
			if (if_block) if_block.c();
			t4 = space();
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true, style: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, t0_value);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t2 = claim_text(div1_nodes, t2_value);
			div1_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			if (if_block) if_block.l(div2_nodes);
			t4 = claim_space(div2_nodes);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "col-sm-4 test-center");
			add_location(div0, file, 180, 5, 6180);
			attr_dev(div1, "class", "col-sm-5 text-center");
			add_location(div1, file, 181, 5, 6260);
			attr_dev(div2, "class", "row");
			set_style(div2, "line-height", "1.3em");
			set_style(div2, "font-size", "1.1em");
			set_style(div2, "border-bottom", "3px solid pink");
			add_location(div2, file, 179, 4, 6082);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div2, anchor);
			append_hydration_dev(div2, div0);
			append_hydration_dev(div0, t0);
			append_hydration_dev(div2, t1);
			append_hydration_dev(div2, div1);
			append_hydration_dev(div1, t2);
			append_hydration_dev(div2, t3);
			if (if_block) if_block.m(div2, null);
			append_hydration_dev(div2, t4);

			if (!mounted) {
				dispose = [
					listen_dev(
						div0,
						"click",
						function () {
							if (is_function(/*clickMemo1*/ ctx[10](/*k*/ ctx[26]))) /*clickMemo1*/ ctx[10](/*k*/ ctx[26]).apply(this, arguments);
						},
						{ once: true },
						false,
						false,
						false
					),
					listen_dev(
						div1,
						"click",
						function () {
							if (is_function(/*clickMemo2*/ ctx[11](/*k*/ ctx[26], /*v*/ ctx[27]))) /*clickMemo2*/ ctx[11](/*k*/ ctx[26], /*v*/ ctx[27]).apply(this, arguments);
						},
						{ once: true },
						false,
						false,
						false
					)
				];

				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			if (dirty[0] & /*post*/ 1 && t0_value !== (t0_value = /*k*/ ctx[26] + "")) set_data_dev(t0, t0_value);
			if (dirty[0] & /*post*/ 1 && t2_value !== (t2_value = /*v*/ ctx[27] + "")) set_data_dev(t2, t2_value);

			if (/*delBtn*/ ctx[6]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_2(ctx);
					if_block.c();
					if_block.m(div2, t4);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			if (if_block) if_block.d();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(179:3) {#each post.myMemo as {k, v, _id}}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let title_value;
	let t;
	let div;
	document.title = title_value = "" + (/*post*/ ctx[0].name + "的主页");

	function select_block_type(ctx, dirty) {
		if (/*setUser*/ ctx[2]) return create_if_block;
		if (/*sleep*/ ctx[5]) return create_if_block_1;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx);
	let if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			t = space();
			div = element("div");
			if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = head_selector('svelte-1qxia5t', document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true, style: true, id: true });
			var div_nodes = children(div);
			if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "container");
			set_style(div, "height", "100%");
			set_style(div, "border-radius", "1em");
			attr_dev(div, "id", "cont");
			add_location(div, file, 129, 0, 3218);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
			insert_hydration_dev(target, div, anchor);
			if_block.m(div, null);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*post*/ 1 && title_value !== (title_value = "" + (/*post*/ ctx[0].name + "的主页"))) {
				document.title = title_value;
			}

			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div, null);
				}
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			if (detaching) detach_dev(div);
			if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload({ params }) {
	// the `slug` parameter is available because
	// this file is called [slug].svelte
	const res = await this.fetch(`home/${params.slug}.json?type=pre`);

	const data = await res.json();

	if (res.status === 200) {
		data.oMsg.reverse();
		return { post: data };
	} else {
		this.error(res.status, data.message);
	}
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('U5Bslugu5D', slots, []);
	let { post } = $$props;
	let kValue;
	let setUser = false;
	let oldPass;
	let newPass;
	let sleep = false;
	let delBtn = false;

	async function quitLog() {
		await fetch(`home/${post.name}.json?type=quit`);
		location.pathname = "";
	}

	async function sendMsg() {
		if (vInput.innerText == "" || kValue == undefined || kValue == "") {
			alert("内容或接收人不能为空!");
		} else {
			await fetch(`home/${post.name}.json?type=addMsg&data=${vInput.innerText}&t=${kValue}`);

			// const sendMsgData = await sendMsgRes.json();
			location.pathname = `home/${post.name}`;
		}
	}

	async function addMemo() {
		if (vInput.innerText == "" || kValue == undefined || kValue == "") {
			alert("键值或value值不能为空!");
		} else {
			await fetch(`home/${post.name}.json?type=addMemo&v=${vInput.innerText}&k=${kValue}`);

			// const addMemoData = await addMemoRes.json();
			location.pathname = `home/${post.name}`;
		}
	}

	function clickMemo1(arg) {
		if (kValue === "" || kValue === undefined) {
			$$invalidate(1, kValue = `${arg}`);
		} else {
			$$invalidate(1, kValue = `${kValue}和${arg}`);
		}
	}

	function clickMemo2(argk, argv) {
		clickMemo1(argk);
		vInput.innerText = `${vInput.innerText}${argv}`;
	}

	async function delUser() {
		if (oldPass === undefined || oldPass === "") {
			alert("请填写旧密码后尝试!");
		} else {
			const delUserRes = await fetch(`home/${post.name}.json?type=delUser&pass=${oldPass}`);
			const delUserData = await delUserRes.json();
			if (!delUserData.yes) alert("密码错误或其它原因导致删除失败!"); else location.pathname = "/";
		}
	}

	async function setPass() {
		if (oldPass === undefined || oldPass === "" || newPass === undefined || newPass === "") {
			alert("请填写密码后尝试!");
		} else {
			const delUserRes = await fetch(`home/${post.name}.json?type=setPass&oldPass=${oldPass}&newPass=${newPass}`);
			const delUserData = await delUserRes.json();

			if (!delUserData.yes) alert("密码错误或其它原因导致修改失败!"); else {
				await fetch(`home/${post.name}.json?type=quit`);
				location.pathname = "/login";
			}
		}
	}

	async function delMemo1(memoID) {
		await fetch(`home/${post.name}.json?type=delMemo&id=${memoID}`);
		location.pathname = `home/${post.name}`;
	}

	async function delMsg(msgID) {
		await fetch(`home/${post.name}.json?type=delMsg&id=${msgID}`);
		location.pathname = `home/${post.name}`;
	}

	async function turnMsg(msgID) {
		const turnMsgRes = await fetch(`home/${post.name}.json?type=turnMsg&id=${msgID}`);
		const turnMsgData = await turnMsgRes.json();

		if (!turnMsgData.yes) alert("这不是您的消息或其它原因撤回失败!"); else {
			location.pathname = `home/${post.name}`;
		}
	}

	$$self.$$.on_mount.push(function () {
		if (post === undefined && !('post' in $$props || $$self.$$.bound[$$self.$$.props['post']])) {
			console.warn("<U5Bslugu5D> was created without expected prop 'post'");
		}
	});

	const writable_props = ['post'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<U5Bslugu5D> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		oldPass = this.value;
		$$invalidate(3, oldPass);
	}

	function input1_input_handler() {
		newPass = this.value;
		$$invalidate(4, newPass);
	}

	const click_handler = () => $$invalidate(2, setUser = !setUser);
	const click_handler_1 = () => history.go(0);
	const click_handler_2 = () => $$invalidate(2, setUser = !setUser);
	const click_handler_3 = () => $$invalidate(5, sleep = true);
	const click_handler_4 = () => history.go(0);
	const click_handler_5 = () => $$invalidate(6, delBtn = !delBtn);

	function input_input_handler() {
		kValue = this.value;
		$$invalidate(1, kValue);
	}

	$$self.$$set = $$props => {
		if ('post' in $$props) $$invalidate(0, post = $$props.post);
	};

	$$self.$capture_state = () => ({
		preload,
		post,
		kValue,
		setUser,
		oldPass,
		newPass,
		sleep,
		delBtn,
		quitLog,
		sendMsg,
		addMemo,
		clickMemo1,
		clickMemo2,
		delUser,
		setPass,
		delMemo1,
		delMsg,
		turnMsg
	});

	$$self.$inject_state = $$props => {
		if ('post' in $$props) $$invalidate(0, post = $$props.post);
		if ('kValue' in $$props) $$invalidate(1, kValue = $$props.kValue);
		if ('setUser' in $$props) $$invalidate(2, setUser = $$props.setUser);
		if ('oldPass' in $$props) $$invalidate(3, oldPass = $$props.oldPass);
		if ('newPass' in $$props) $$invalidate(4, newPass = $$props.newPass);
		if ('sleep' in $$props) $$invalidate(5, sleep = $$props.sleep);
		if ('delBtn' in $$props) $$invalidate(6, delBtn = $$props.delBtn);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		post,
		kValue,
		setUser,
		oldPass,
		newPass,
		sleep,
		delBtn,
		quitLog,
		sendMsg,
		addMemo,
		clickMemo1,
		clickMemo2,
		delUser,
		setPass,
		delMemo1,
		delMsg,
		turnMsg,
		input0_input_handler,
		input1_input_handler,
		click_handler,
		click_handler_1,
		click_handler_2,
		click_handler_3,
		click_handler_4,
		click_handler_5,
		input_input_handler
	];
}

class U5Bslugu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { post: 0 }, null, [-1, -1]);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bslugu5D",
			options,
			id: create_fragment.name
		});
	}

	get post() {
		throw new Error("<U5Bslugu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set post(value) {
		throw new Error("<U5Bslugu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { U5Bslugu5D as default, preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
